<div class="container mt-4">
    <div class="row">
        <!-- Delete Confirmation Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this player?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                    </div>
                </div>
            </div>
        </div>


        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="h3 mb-0">Player Dashboard</h1>
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i> Create New
            </a>
        </div>

        <div class="card shadow-sm p-1">
            <div class="card-body p-1">
                <table class="table table-striped table-hover p-1" id="playersTable" style="width:100%">
                    <thead class="table-dark">
                        <tr>
                            <th scope="col">Player Name</th>
                            <th scope="col">Position</th>
                            <th scope="col">Jersey Number</th>
                            <th scope="col">Goals Scored</th>
                            <th scope="col" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- DataTables will populate -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-lg-6">
            @Html.Partial("_ArsenalResults")
        </div>
        <div class="col-lg-6">
            @Html.Partial("_ArsenalFixtures")
        </div>
    </div>
</div>

@section Scripts {    
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <script>
        $(document).ready(function () {
            let retryAttempts = 0;
            const maxRetries = 2;

            function initDataTable() {
                $('#playersTable').DataTable({
                    ajax: {
                        url: '@Url.Action("GetAllPlayers", "Players")',
                        dataSrc: '',
                        timeout: 30000,
                        cache: false,
                        error: function(xhr, error, code) {
                            console.error('DataTables error:', error);
                            
                            // Auto-retry on first failure due to deployment issues
                            if (retryAttempts < maxRetries) {
                                retryAttempts++;
                                console.log('Retrying... attempt', retryAttempts);
                                
                                setTimeout(() => {
                                    $('#playersTable').DataTable().destroy();
                                    initDataTable();
                                }, 2000 * retryAttempts);
                            } else {
                                alert('Unable to load players data. Please refresh the page.');
                            }
                        }
                    },
                    columns: [
                        { data: 'playerName', title: 'Player Name' },
                        { data: 'position', title: 'Position' },
                        { data: 'jerseyNumber', title: 'Jersey Number' },
                        { data: 'goalsScored', title: 'Goals Scored' },
                        { data: 'playerId',
                            title: 'Actions',
                            orderable: false,
                            searchable: false,
                            className: 'text-center',
                            render: function (data, type, row, meta) {
                                var editUrl = '/Players/Edit/' + data;
                                return `
                                    <a href="${editUrl}" class="btn btn-sm btn-outline-secondary me-1" title="Edit">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <button class="btn btn-sm btn-outline-danger delete-btn" data-playerid="${data}" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>`;
                            }
                        }
                    ],
                    responsive: true,
                    paging: true,
                    pageLength: 10,
                    lengthMenu: [ [5, 10, 25, 50, 100], [5, 10, 25, 50, 100] ],
                    order: [[0, 'asc']], // sort by Player Name to begin with
                    language: {
                        emptyTable: "No players available",
                        loadingRecords: "Loading players..."
                    },
                    initComplete: function () {
                        retryAttempts = 0;
                        var api = this.api();
                    }
                });
            }

            // Initialize the table
            initDataTable();

            let playerIdToDelete = null;

            // Open modal and store playerId
            $('#playersTable tbody').on('click', '.delete-btn', function () {
                playerIdToDelete = $(this).data('playerid');
                var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                deleteModal.show();
            });

            // Confirm delete and call API
            $('#confirmDeleteBtn').on('click', function () {
                if (!playerIdToDelete) return;

                $.ajax({
                    url: '/api/players/' + playerIdToDelete,
                    type: 'DELETE',
                    timeout: 15000,
                    success: function (response) {
                        // Hide modal
                        var deleteModalEl = document.getElementById('deleteModal');
                        var deleteModal = bootstrap.Modal.getInstance(deleteModalEl);
                        deleteModal.hide();

                        // Reload DataTable
                        $('#playersTable').DataTable().ajax.reload(null, false);
                    },
                    error: function (xhr, status, error) {
                        console.error('Delete error:', error);
                        let errorMsg = xhr.responseJSON?.message || 'Failed to delete player.';
                        if (status === 'timeout') {
                            errorMsg = 'Delete request timed out. Please refresh to check if player was deleted.';
                        }
                        alert(errorMsg);
                    }
                });
            });

        });
    </script>
}